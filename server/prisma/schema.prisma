generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  role      UserRole @default(USER)
  createdAt DateTime @default(now())
  Order     Order[]
}

model Product {
  id          Int         @id @default(autoincrement())
  title       String
  description String?
  price       Float
  inventory   Int
  image       String?
  deleted     Boolean     @default(false)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  OrderItem   OrderItem[]
}

model Order {
  id        Int         @id @default(autoincrement())
  userId    Int
  total     Float
  status    OrderStatus @default(PENDING)
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  items     OrderItem[]
  user      User        @relation(fields: [userId], references: [id])
  payment   Payment?
}

model OrderItem {
  id        Int     @id @default(autoincrement())
  orderId   Int
  productId Int
  quantity  Int
  price     Float
  product   Product @relation(fields: [productId], references: [id])
  order     Order   @relation(fields: [orderId], references: [id])
}

model Seller {
  id           Int          @id @default(autoincrement())
  fullName     String
  email        String       @unique
  phone        String
  businessName String
  category     String?
  description  String?
  idCard       String?
  status       SellerStatus @default(PENDING)
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
}

model Payment {
  id        Int           @id @default(autoincrement())
  orderId   Int
  amount    Float
  method    String
  status    PaymentStatus @default(PENDING)
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
  order     Order         @relation(fields: [orderId], references: [id])

  @@unique([orderId])
}

enum SellerStatus {
  PENDING
  APPROVED
  REJECTED
}

enum PaymentStatus {
  PENDING
  SUCCESS
  FAILED
}

enum OrderStatus {
  PENDING
  PAID
  CANCELLED
  SHIPPED
  COMPLETED
}

enum UserRole {
  USER
  ADMIN
}
